//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18052
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SquidEyes.GUI.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SquidEyes.GUI.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An EARLY-STAGE program initialization error occured! 
        ///
        ///The program will now shutdown.
        ///
        ///Please contact technical support for further assistance..
        /// </summary>
        internal static string EarlyStageInitFailure {
            get {
                return ResourceManager.GetString("EarlyStageInitFailure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to PLEASE NOTE: The &quot;Error Details&quot; are highly technical and formatted as an XML document to be machine readable!  Do you still want to display the &quot;Error Details&quot;?.
        /// </summary>
        internal static string ErrorDetailsConfirmation {
            get {
                return ResourceManager.GetString("ErrorDetailsConfirmation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occured while trying to display &quot;Error Details&quot;!.
        /// </summary>
        internal static string ErrorDetailsDisplayError {
            get {
                return ResourceManager.GetString("ErrorDetailsDisplayError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An Error Report attachment may be no larger than {0} bytes!.
        /// </summary>
        internal static string ErrorReportAttachmentTooBig {
            get {
                return ResourceManager.GetString("ErrorReportAttachmentTooBig", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error report could not be sent to the customer support team!  Please contact the team via {0} or {1}, or visit {2} for troubleshooting tips and access to our support forum..
        /// </summary>
        internal static string ErrorReportEnqueueError {
            get {
                return ResourceManager.GetString("ErrorReportEnqueueError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error report was sent to the customer support team and will be reviewed shortly..
        /// </summary>
        internal static string ErrorReportWasSent {
            get {
                return ResourceManager.GetString("ErrorReportWasSent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An INTERNAL ERROR occured while attempting to display a &quot;Failure&quot; dialog!.
        /// </summary>
        internal static string FailureDialogInternalError {
            get {
                return ResourceManager.GetString("FailureDialogInternalError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Contextual infomation is the most important tool the customer support team has to track down and resolve errors.  Is it OK to transmit an error report without providing a detailed error description and/or an attachment like a screen print?.
        /// </summary>
        internal static string NoMessageNoAttachment {
            get {
                return ResourceManager.GetString("NoMessageNoAttachment", resourceCulture);
            }
        }
    }
}
